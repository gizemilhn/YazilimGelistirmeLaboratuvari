<?php


class Ders
{
    public $id;
    public $ad;
    public $gun;
    public $saat;
    public $classes;


  

    public function __construct($id = null, $ad = null, $gun = null, $saat = null, $classes = null)
    {
        $this->id = $id;
        $this->ad = $ad;
        $this->gun = $gun;
        $this->saat = $saat;
        $this->classes = $classes;
    }

    public function isEqual($other)
    {
        return $other instanceof Ders &&
            $this->id == $other->id &&
            $this->ad == $other->ad &&
            $this->saat == $other->saat &&
            $this->gun == $other->gun;
    }

    public function getHash()
    {
        return hash("sha256", json_encode([$this->ad, $this->saat, $this->gun]));
    }
}

class Classes
{
    public $className;

    

    public function __construct($className = null)
    {
        $this->className = $className;
    }
    private static $derslikler = [];


    public static function init($db)
    {
        $derslik_sor = $db->prepare("SELECT * FROM sinif");
        $derslik_sor->execute(array());
        $say = $derslik_sor->rowCount();
        if ($say != 0) {
            while ($derslik_cek = $derslik_sor->fetch(PDO::FETCH_ASSOC)) {
                array_push(self::$derslikler, $derslik_cek['sinif_isim']);
            }
        }
    }

    public function isEqual($other)
    {
        return $other instanceof Classes && $this->className == $other->className;
    }

    public function getHash()
    {
        return hash("sha256", $this->className);
    }


    public static function getDerslikler()
    {
        return self::$derslikler;
    }

    public static function bosDerslikBul($gun, $saat, $program)
    {
        $derslikler = self::getDerslikler(); 

        
        foreach ($derslikler as $derslik) {
            $bos = true;

            foreach ($program as $hocaDersleri) {
                foreach ($hocaDersleri as $existingDers) {
                    if ($existingDers->gun == $gun && $existingDers->saat == $saat && $existingDers->classes == $derslik) {
                        $bos = false;
                        break 2; 
                    }
                }
            }

            if ($bos) {
                return $derslik;
            }
        }

        
        foreach ($derslikler as $derslik) {
            $bos = true;

            foreach ($program as $hocaDersleri) {
                foreach ($hocaDersleri as $existingDers) {
                    if ($existingDers->classes == $derslik) {
                        $bos = false;
                        break 2; 
                    }
                }
            }

            if ($bos) {
                return $derslik;
            }
        }

        return null; 
    }
}

class Hoca
{
    public $id;
    public $ad;
    public $istenmeyen_gun;
    public $givenLessons;


   


    public function __construct($id = null, $ad = null, $istenmeyen_gun = null, $givenLessons = null)
    {
        $this->id = $id;
        $this->ad = $ad;
        $this->istenmeyen_gun = $istenmeyen_gun;
        $this->givenLessons = $givenLessons ? $givenLessons : [];
    }

    public function hash()
    {
        return hash('sha256', $this->ad . $this->istenmeyen_gun);
    }

    public function getHash()
    {
        return hash("sha256", json_encode([$this->ad, $this->istenmeyen_gun]));
    }
    public function oncelikliDersleriGetir()
    {
        $oncelikliDersler = [];

        foreach ($this->givenLessons as $ders) {
            
            if ($ders->gun != "") {
                $oncelikliDersler[] = $ders;
            }
        }

        return $oncelikliDersler;
    }
    public function equals($other)
    {
        return $this->ad == $other->ad;
    }
}

class WorkingHours
{
    

    public static $_workingDays = ["Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma"];
    public static $_workingHours = [
        "09:00",
        "10:00",
        "11:00",
        "12:00",
        "13:00",
        "14:00",
        "15:00",
        "16:00",
        "17:00",
    ];

    public static function workingHours()
    {
        $result = [];
        foreach (WorkingHours::$_workingDays as $day) {
            $result[$day] = WorkingHours::$_workingHours;
        }
        return $result;
    }

    public static function excludeDays($excludedDays)
    {
        $result = array_diff(self::$_workingDays, (array) $excludedDays);

        foreach ($result as $day) {
            $workingHours[$day] = self::$_workingHours;
        }

        return $workingHours;
    }
}
<?php



try {
    
    $db = new PDO("mysql:host=localhost;dbname=canan;charset=utf8", 'root', '');
    echo "veritabanı bağlantısı başarılı";
} catch (PDOException $e) {
    
    echo "Hata kodu: " . $e->getCode() . "<br>";
    echo "Hata mesajı: " . $e->getMessage() . "<br>";
}
<?php



function renklendirmeAlgoritmasi($hocaList)
{
    $renkler = []; 
    $program = []; 

    foreach ($hocaList as $hoca) {
        $hash = $hoca->getHash(); 
        if (!isset($renkler[$hash])) {
            $renkler[$hash] = []; 

        $renk = $hash; 
        foreach ($hoca->givenLessons as $ders) {
            if (!isset($program[$renk])) {
                $program[$renk] = []; 
            }
            $program[$renk][] = $ders; 
        }
    }

    return $program; 
}


function otomatikDersProgramiOlustur($hocalar)
{
    $program = [];
    $renkler = renklendirmeAlgoritmasi($hocalar);
    $index = 0;

    foreach ($renkler as $renk => $dersler) {
        $workingHours = WorkingHours::workingHours(); 

        if (!isset($program[$renk])) {
            $program[$renk] = []; 
        }

        if (isset($hocalar[$index]->istenmeyen_gun) and $hocalar[$index]->istenmeyen_gun != null) {
            $workingHours = WorkingHours::excludeDays($hocalar[$index]->istenmeyen_gun);
        }


        foreach ($dersler as $ders) {
            if ($ders->gun != "") {
                if ($ders->saat != "") {
                    $hour = $ders->saat;
                } else {
                    $hour = $workingHours[$ders->gun][0];
                }
                $derslik = Classes::bosDerslikBul($ders->gun, $hour, $program);
                if ($derslik !== null) {
                    $program[$renk][] = new Ders($ders->id, $ders->ad, $ders->gun, $hour, $derslik);
                    array_shift($workingHours[$ders->gun]);
                }
            } else {
                $derslik = null;
                foreach ($workingHours as $day => $hours) {
                    foreach ($hours as $saat) {
                        $derslik = Classes::bosDerslikBul($day, $saat, $program);
                        if ($derslik !== null) {
                            $program[$renk][] = new Ders($ders->id, $ders->ad, $day, $saat, $derslik);
                            array_shift($workingHours[$day]);
                            break; 
                        }
                    }
                    if ($derslik !== null) {
                        break; 
                    }
                }
            }
        }
        $index++;
    }


    return $program; 
}

function arrayOfExplodedDays($days)
{
    if ($days != null) {
        return explode(",", $days);
    } else {
        return null;
    }
}

function findLessonAtHourAndDay($dersler, $saat, $gun)
{
    foreach ($dersler as $ders) {
        if ($ders->saat == $saat && $ders->gun == $gun) {
            return $ders;
        }
    }
    return null;
}
<?php 
include './vendor/connection.php';
ini_set('display_errors', 1);
error_reporting(E_ALL);

if (isset($_POST['update_ders'])) {

    $gun = null;
    $saat = null;

    if ($_POST['ders_gun'] != "null") {
        $gun = $_POST['ders_gun'];
    }
    if ($_POST['ders_saat'] != "") {
        $saat = $_POST['ders_saat'];
    }
    

    $kaydet = $db->prepare("UPDATE ders SET
    ders_ad=:ders_ad,
    ders_gun=:ders_gun,
    ders_saat=:ders_saat,
    ders_hoca=:ders_hoca
    WHERE ders_id={$_POST['id']}");
    $insert = $kaydet->execute(array(
        'ders_ad' => $_POST['ders_ad'],
        'ders_gun' => $gun,
        'ders_saat' => $saat,
        'ders_hoca' => $_POST['ders_hoca']
    ));
    if ($insert) {
        header('Location:./index.php?updated=ok');
    } else {
        header('Location:./update_ders.php?durum=basarisiz');
    }
    
}<?php
include './vendor/classes.php';
include './vendor/functions.php';
include './vendor/connection.php';

ini_set('display_errors', 1);
error_reporting(E_ALL);


$hocalar = [];
Classes::init($db);

$hoca_sor = $db->prepare("SELECT * FROM hoca");
$hoca_sor->execute(array());
$say = $hoca_sor->rowCount();
if ($say != 0) {
    while ($hoca_cek = $hoca_sor->fetch(PDO::FETCH_ASSOC)) {
        $hocanin_dersleri = [];

        $ders_sor = $db->prepare("SELECT * FROM ders where ders_hoca=:ders_hoca");
        $ders_sor->execute(array(
            'ders_hoca' => $hoca_cek['hoca_id']
        ));
        $ders_say = $ders_sor->rowCount();
        if ($ders_say != 0) {
            while ($ders_cek = $ders_sor->fetch(PDO::FETCH_ASSOC)) {
                array_push($hocanin_dersleri, new Ders($ders_cek['ders_id'], $ders_cek['ders_ad'], $ders_cek['ders_gun'], $ders_cek['ders_saat']));
            }
        }
        $istenmeyen_gunler = arrayOfExplodedDays($hoca_cek['hoca_istenmeyengun']);
        array_push($hocalar, new Hoca(
            $hoca_cek['hoca_id'],
            $hoca_cek['hoca_isim'],
            $istenmeyen_gunler,
            $hocanin_dersleri
        ));
    }
}

$dersProgrami = otomatikDersProgramiOlustur($hocalar);

if (isset($_GET['updated'])) {
    foreach ($dersProgrami as $renk => $dersGunleri) {
        foreach ($hocalar as $hoca) {
            if ($hoca->getHash() == $renk) {
                $hocaAdi = $hoca->ad;
                $hocaId = $hoca->id;
                break;
            }
        }
        $json = array();
        $json['dersprogrami'] = (array) $dersGunleri;

        $kaydet = $db->prepare("UPDATE hoca SET
    hoca_dersProgrami=:hoca_dersProgrami
    WHERE hoca_id={$hocaId}");
        $insert = $kaydet->execute(array(
            'hoca_dersProgrami' => json_encode($json)
        ));
    }
}



?>

<!DOCTYPE html>
<html lang="tr-TR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yazgel</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        body {
            width: 100vw;
            height: 100vh;
            background-color: #14141D;

            display: flex;
            align-items: center;
            flex-direction: column;

        }

        .programs {

            margin-top: 25px;
            width: 80vw;
            background-color: #DCE0E5;
            padding: 50px;
            border-radius: 50px;
        }

        table {
            width: 100%;
        }

        th,
        td {
            padding: 15px;
        }
    </style>
</head>

<body>

    <div class="container ">

        <h5 style="color:#DCE0E5; text-align:center;margin-top: 75px;">Kocaeli Universitesi - Çizge Renklendirme ile Ders Programı Hazırlama</h5>

        <div class="programs">


            <ul class="nav nav-tabs" id="myTab" role="tablist">

                <?php
                $index = 0;
                foreach ($dersProgrami as $renk => $dersGunleri) {
                    $hocaAdi = ""; 
                    foreach ($hocalar as $hoca) {
                        if ($hoca->getHash() == $renk) {
                            $hocaAdi = $hoca->ad;
                            break;
                        }
                    }

                ?>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link <?php if ($index == 0) {
                                                    echo 'active';
                                                } ?>" id="<?= 'tabs' . $index ?>-tab" data-bs-toggle="tab" data-bs-target="#<?= 'tabs' . $index ?>" type="button" role="tab" aria-controls="<?= 'tabs' . $index ?>" aria-selected="true"><?= $hocaAdi ?></button>
                    </li>
                <?php
                    $index++;
                }

                ?>


            </ul>

            <!-- Tab panes -->
            <div class="tab-content">


                <?php
                $index = 0;
                foreach ($dersProgrami as $renk => $dersGunleri) {
                    $hocaAdi = "";
                    foreach ($hocalar as $hoca) {
                        if ($hoca->getHash() == $renk) {
                            $hocaAdi = $hoca->ad;
                            break;
                        }
                    }
                ?>
                    <div class="tab-pane <?php if ($index == 0) {
                                                echo 'active';
                                            }  ?>" id="<?= 'tabs' . $index  ?>" role="tabpanel" aria-labelledby="<?= 'tabs' . $index ?>-tab">

                        <?php
                        
                        $workingHours = WorkingHours::workingHours();

                        echo '<table border="1">';
                        echo '<tr><th>Saat</th>';
                        foreach ($workingHours as $day => $hours) {
                            echo "<th>$day</th>";
                        }
                        echo '</tr>';

                        foreach (WorkingHours::$_workingHours as $hour) {
                            echo '<tr>';
                            echo "<td>$hour</td>";

                            foreach ($workingHours as $day => $hours) {
                                echo '<td>';

                                
                                $ders = findLessonAtHourAndDay($dersGunleri, $hour, $day);
                                if ($ders !== null) {
                        ?>
                                    <a href="./update_ders.php?id=<?= $ders->id ?>">
                                        <?= $ders->ad . '<br>' . $ders->classes; ?>
                                    </a>
                        <?php

                                } else {
                                    echo '-';
                                }

                                echo '</td>';
                            }

                            echo '</tr>';
                        }

                        echo '</table>';


                        ?>

                    </div>
                <?php
                    $index++;
                }

                ?>

            </div>
        </div>
        <!-- Nav tabs -->

    </div>


</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>

</html>
<?php
include './vendor/classes.php';
include './vendor/functions.php';
include './vendor/connection.php';

ini_set('display_errors', 1);
error_reporting(E_ALL);

$ders_sor = $db->prepare("SELECT * FROM ders where ders_id=:ders_id");
$ders_sor->execute(array(
    'ders_id' => $_GET['id']
));

$ders_cek = $ders_sor->fetch(PDO::FETCH_ASSOC);



?>

<!DOCTYPE html>
<html lang="tr-TR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yazgel</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        body {
            width: 100vw;
            height: 100vh;
            background-color: #14141D;

            display: flex;
            align-items: center;
            flex-direction: column;

        }

        .programs {

            margin-top: 25px;
            width: 80vw;
            background-color: #DCE0E5;
            padding: 50px;
            border-radius: 50px;
        }

        table {
            width: 100%;
        }

        th,
        td {
            padding: 15px;
        }
    </style>
</head>

<body>

    <div class="container ">

        <h5 style="color:#DCE0E5; text-align:center;margin-top: 75px;">Kocaeli Universitesi - Çizge Renklendirme ile Ders Programı Hazırlama</h5>

        <div class="programs">

            <form action="./database.php" method="post">
                <div class="row">
                    <div class="col-lg-2">
                        Dersin Adı:
                    </div>
                    <div class="col-lg-10">
                        <input type="text" name="ders_ad" class="form-control" value="<?= $ders_cek['ders_ad'] ?>">
                    </div>
                </div>
                <div class="row mt-4">
                    <div class="col-lg-2">
                        Dersin Bulunmasını İstediğiniz Gün:
                    </div>
                    <div class="col-lg-10">
                        <select name="ders_gun" class="form-control" id="">
                            <option value="null">Herhangi Bir Gün Olabilir</option>
                            <option value="Pazartesi">Pazartesi</option>
                            <option value="Salı">Salı</option>
                            <option value="Çarşamba">Çarşamba</option>
                            <option value="Perşembe">Perşembe</option>
                            <option value="Cuma">Cuma</option>
                            <option value="Cumartesi">Cumartesi</option>
                            <option value="Pazar">Pazar</option>
                        </select>
                    </div>
                </div>
                <div class="row mt-4">
                    <div class="col-lg-2">
                        Dersin Bulunmasını İstediğiniz Saat:
                    </div>
                    <div class="col-lg-10">
                        <input type="text" name="ders_saat" class="form-control">
                    </div>
                </div>
                <div class="row mt-4">
                    <div class="col-lg-2">
                        Dersin Bulunmasını İstediğiniz Hoca:
                    </div>
                    <div class="col-lg-10">
                        <select name="ders_hoca" class="form-control" id="">
                            <?php

                            $hoca_sor = $db->prepare("SELECT * FROM hoca");
                            $hoca_sor->execute(array());
                            $say = $hoca_sor->rowCount();
                            if ($say != 0) {
                                while ($hoca_cek = $hoca_sor->fetch(PDO::FETCH_ASSOC)) {
                            ?>
                                    <option value="<?= $hoca_cek['hoca_id'] ?>"><?= $hoca_cek['hoca_isim'] ?></option>
                            <?php }
                            } ?>
                        </select>
                    </div>
                </div>
                <input type="hidden" name="id" value="<?=$_GET['id'] ?>">

                <div class="mt-5">
                    <button name="update_ders" class="btn btn-primary">Kaydet</button>
                    <a href="./index.php" class="btn btn-danger">Geri Dön</a>
                </div>
            </form>
        </div>
        <!-- Nav tabs -->

    </div>


</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>

</html>
-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Anamakine: localhost
-- Üretim Zamanı: 05 Oca 2024, 22:25:33
-- Sunucu sürümü: 10.4.27-MariaDB
-- PHP Sürümü: 8.2.0

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Veritabanı: `canan`
--

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `ders`
--

CREATE TABLE `ders` (
  `ders_id` int(11) NOT NULL,
  `ders_ad` varchar(50) DEFAULT NULL,
  `ders_gun` varchar(20) DEFAULT NULL,
  `ders_saat` varchar(11) DEFAULT NULL,
  `ders_classes` int(11) DEFAULT NULL,
  `ders_hoca` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Tablo döküm verisi `ders`
--

INSERT INTO `ders` (`ders_id`, `ders_ad`, `ders_gun`, `ders_saat`, `ders_classes`, `ders_hoca`) VALUES
(1, 'Fizik - 1', 'Perşembe', '12:00', NULL, 1),
(2, 'Nanoteknoloji', NULL, NULL, NULL, 1),
(3, 'Algoritma Programlama', NULL, NULL, NULL, 2),
(4, 'Oyun Programlama', NULL, NULL, NULL, 2),
(5, 'Yazlab', NULL, NULL, NULL, 2),
(6, 'Programlama Lab', NULL, NULL, NULL, 2),
(7, 'Web Tasarım', NULL, NULL, NULL, 3),
(8, 'Web Tasarım Lab', NULL, NULL, NULL, 3),
(9, 'Bulut Bilişim', NULL, NULL, NULL, 3),
(10, 'Mobil Uygulama', 'Perşembe', '10:00', NULL, 3),
(11, 'Veri Yapıları ve Algoritmalar', NULL, NULL, NULL, 1),
(12, 'Veri Yapıları Lab', NULL, NULL, NULL, 4),
(13, 'Linux', NULL, NULL, NULL, 4),
(14, 'Görüntü İşleme', NULL, NULL, NULL, 4);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `hoca`
--

CREATE TABLE `hoca` (
  `hoca_id` int(11) NOT NULL,
  `hoca_isim` varchar(256) DEFAULT NULL,
  `hoca_istenmeyengun` varchar(500) DEFAULT NULL,
  `hoca_dersProgrami` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Tablo döküm verisi `hoca`
--

INSERT INTO `hoca` (`hoca_id`, `hoca_isim`, `hoca_istenmeyengun`, `hoca_dersProgrami`) VALUES
(1, 'Hikmet Hakan Gürel', 'Pazartesi,Salı,Çarşamba', '{\"dersprogrami\":[{\"id\":1,\"ad\":\"Fizik - 1\",\"gun\":\"Per\\u015fembe\",\"saat\":\"12:00\",\"classes\":\"Derslik 1\"},{\"id\":2,\"ad\":\"Nanoteknoloji\",\"gun\":\"Per\\u015fembe\",\"saat\":\"10:00\",\"classes\":\"Derslik 1\"},{\"id\":11,\"ad\":\"Veri Yap\\u0131lar\\u0131 ve Algoritmalar\",\"gun\":\"Per\\u015fembe\",\"saat\":\"11:00\",\"classes\":\"Derslik 1\"}]}'),
(2, 'Yavuz Selim Fatihoğlu', 'Pazartesi', '{\"dersprogrami\":[{\"id\":3,\"ad\":\"Algoritma Programlama\",\"gun\":\"Sal\\u0131\",\"saat\":\"09:00\",\"classes\":\"Derslik 1\"},{\"id\":4,\"ad\":\"Oyun Programlama\",\"gun\":\"Sal\\u0131\",\"saat\":\"10:00\",\"classes\":\"Derslik 1\"},{\"id\":5,\"ad\":\"Yazlab\",\"gun\":\"Sal\\u0131\",\"saat\":\"11:00\",\"classes\":\"Derslik 1\"},{\"id\":6,\"ad\":\"Programlama Lab\",\"gun\":\"Sal\\u0131\",\"saat\":\"12:00\",\"classes\":\"Derslik 1\"}]}'),
(3, 'Önder Yakut', NULL, '{\"dersprogrami\":[{\"id\":7,\"ad\":\"Web Tasar\\u0131m\",\"gun\":\"Pazartesi\",\"saat\":\"09:00\",\"classes\":\"Derslik 1\"},{\"id\":8,\"ad\":\"Web Tasar\\u0131m Lab\",\"gun\":\"Pazartesi\",\"saat\":\"10:00\",\"classes\":\"Derslik 1\"},{\"id\":9,\"ad\":\"Bulut Bili\\u015fim\",\"gun\":\"Pazartesi\",\"saat\":\"11:00\",\"classes\":\"Derslik 1\"},{\"id\":10,\"ad\":\"Mobil Uygulama\",\"gun\":\"Per\\u015fembe\",\"saat\":\"10:00\",\"classes\":\"Derslik 2\"}]}'),
(4, 'Serdar Solak', NULL, '{\"dersprogrami\":[{\"id\":12,\"ad\":\"Veri Yap\\u0131lar\\u0131 Lab\",\"gun\":\"Pazartesi\",\"saat\":\"09:00\",\"classes\":\"Derslik 2\"},{\"id\":13,\"ad\":\"Linux\",\"gun\":\"Pazartesi\",\"saat\":\"10:00\",\"classes\":\"Derslik 2\"},{\"id\":14,\"ad\":\"G\\u00f6r\\u00fcnt\\u00fc \\u0130\\u015fleme\",\"gun\":\"Pazartesi\",\"saat\":\"11:00\",\"classes\":\"Derslik 2\"}]}');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `sinif`
--

CREATE TABLE `sinif` (
  `sinif_id` int(11) NOT NULL,
  `sinif_isim` varchar(50) DEFAULT NULL,
  `sinif_kod` varchar(50) DEFAULT NULL,
  `sinif_desc` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Tablo döküm verisi `sinif`
--

INSERT INTO `sinif` (`sinif_id`, `sinif_isim`, `sinif_kod`, `sinif_desc`) VALUES
(1, 'Derslik 1', 'E-321', 'Açıklama'),
(2, 'Derslik 2', 'E-324', 'Açıklama');

--
-- Dökümü yapılmış tablolar için indeksler
--

--
-- Tablo için indeksler `ders`
--
ALTER TABLE `ders`
  ADD PRIMARY KEY (`ders_id`);

--
-- Tablo için indeksler `hoca`
--
ALTER TABLE `hoca`
  ADD PRIMARY KEY (`hoca_id`);

--
-- Tablo için indeksler `sinif`
--
ALTER TABLE `sinif`
  ADD PRIMARY KEY (`sinif_id`);

--
-- Dökümü yapılmış tablolar için AUTO_INCREMENT değeri
--

--
-- Tablo için AUTO_INCREMENT değeri `ders`
--
ALTER TABLE `ders`
  MODIFY `ders_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=15;

--
-- Tablo için AUTO_INCREMENT değeri `hoca`
--
ALTER TABLE `hoca`
  MODIFY `hoca_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- Tablo için AUTO_INCREMENT değeri `sinif`
--
ALTER TABLE `sinif`
  MODIFY `sinif_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
